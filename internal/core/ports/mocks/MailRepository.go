// Code generated by mockery v2.32.0. DO NOT EDIT.

package mocks

import (
	"context"
	mock "github.com/stretchr/testify/mock"
)

// MailRepository is an autogenerated mock type for the MailRepository type
type MailRepository struct {
	mock.Mock
}

// Store provides a mock function with given fields
func (_m *MailRepository) Send(ctx context.Context, fileName string, file []byte) error {
	ret := _m.Called(ctx, fileName, file)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, []byte) error); ok {
		r0 = rf(ctx, fileName, file)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMailRepository creates a new instance of MailRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMailRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *MailRepository {
	mock := &MailRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
